import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'org.springframework.boot' version '2.7.2' apply false
}

subprojects { project ->
    if (!project.file('src').exists()) return
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    if (project.projectDir.parentFile.name.equals('services'))
        apply plugin: 'org.springframework.boot'

    //delete ibm mq temp files
    project.projectDir.listFiles().each { f ->
        if (f.name.startsWith('mqjms'))
            f.delete()
    }

    ext {
        set('springBootVersion', '2.7.0')
        set('springCloudStreamVersion', '3.2.4')
        set('springCloudVersion', '2021.0.3')
    }
    repositories {
        mavenCentral()
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom SpringBootPlugin.BOM_COORDINATES
        }
    }
    dependencies {
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        implementation 'org.apache.commons:commons-lang3'
        implementation 'org.springframework.cloud:spring-cloud-stream'

        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }
    test {
        useJUnitPlatform()
    }
}
